{"version":3,"file":"static/js/505.84f63035.chunk.js","mappings":"2PA0CA,EApCmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACpB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAsCC,EAAAA,EAAAA,UAASD,EAAaE,IAAI,UAAhE,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,kBAAMC,UAAWC,EAAAA,EAAAA,WAAmBR,SAXb,SAAAS,GACvBA,EAAEC,iBACGL,EAKLL,EAASK,GAJPM,MAAM,iBAQR,WACE,mBAAQC,KAAK,SAASL,UAAWC,EAAAA,EAAAA,kBAAjC,UACE,SAAC,MAAD,OAEF,4BACE,kBACED,UAAWC,EAAAA,EAAAA,iBACXI,KAAK,OACLC,YAAY,GACZC,KAAK,SACLC,MAAOV,GAAe,GACtBW,SAAU,SAAAP,GAAC,OAAIH,EAAeG,EAAEQ,OAAOF,MAAMG,8BCiBvD,EA3Ce,WACb,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KAEA,GAAwCnB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBmB,EAArB,KAoBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQrB,EAAaE,IAAI,SAE3BmB,IACFC,EAAAA,EAAAA,IAAYD,GAAOE,MAAK,SAAAC,GACU,IAA5BA,EAAKA,KAAKC,cAIdP,EAAUM,EAAKA,KAAKE,SAHlBjB,MAAM,cAAD,OAAeY,EAAf,qCAMV,CAACrB,KAGF,iCACE,SAAC,EAAD,CAAYF,SApBS,SAAAuB,GACvBF,EAAgB,CAAEE,MAAOA,OAoBtBJ,EAAOU,OAAS,IACf,+BACE,eAAItB,UAAWC,EAAAA,EAAAA,YAAf,SACGW,EAAOW,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,gB,6KCnCzBE,EAAW,+BACXC,EAAU,mCAEVC,EAAoB,WACtB,IAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASJ,IAEb,OAAOK,GAAAA,CAAM,GAAD,OAAIN,EAAJ,+BAAmCG,KAG7Cd,EAAc,SAACD,GACjB,IAAMe,EAAS,IAAIC,gBAAgB,CAC/BC,QAASJ,EACTb,MAAOA,IAEX,OAAOkB,GAAAA,CAAM,GAAD,OAAIN,EAAJ,yBAA6BG,KAGvCI,EAAe,SAACT,GAClB,IAAMK,EAAS,IAAIC,gBAAgB,CAC/BC,QAASJ,IAEb,OAAOK,GAAAA,CAAM,GAAD,OAAIN,EAAJ,kBAAsBF,EAAtB,YAA4BK,KAGtCK,EAAe,SAACV,GAClB,IAAMK,EAAS,IAAIC,gBAAgB,CAC/BC,QAASJ,IAEb,OAAOK,GAAAA,CAAM,GAAD,OAAIN,EAAJ,kBAAsBF,EAAtB,oBAAoCK,KAG9CM,EAAe,SAACX,GAClB,IAAMK,EAAS,IAAIC,gBAAgB,CAC/BC,QAASJ,IAGb,OAAOK,GAAAA,CAAM,GAAD,OAAIN,EAAJ,kBAAsBF,EAAtB,oBAAoCK,M,mBCtCpD,KAAgB,WAAa,2BAA2B,kBAAoB,kCAAkC,yBAA2B,yCAAyC,iBAAmB,iCAAiC,YAAc","sources":["components/movies/searchForm.jsx","components/movies/index.jsx","service/movie_api.js","webpack://react-homework-template/./src/components/movies/movies.module.css?b4e4"],"sourcesContent":["import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport styles from './movies.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query'));\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    if (!searchQuery) {\n      alert('please enter');\n      return;\n    }\n\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <form className={styles.searchForm} onSubmit={handleSubmitForm}>\n      <button type=\"submit\" className={styles.searchForm_button}>\n        <ImSearch />\n      </button>\n      <label>\n        <input\n          className={styles.searchForm_input}\n          type=\"text\"\n          placeholder=\"\"\n          name=\"search\"\n          value={searchQuery || ''}\n          onChange={e => setSearchQuery(e.target.value.toLocaleLowerCase())}\n        />\n      </label>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { searchMovie } from 'service/movie_api';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport SearchForm from './searchForm';\nimport styles from './movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  // const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      searchMovie(query).then(data => {\n        if (data.data.total_results === 0) {\n          alert(`not found \"${query}\" movie, try something alse`);\n          return;\n        }\n        setMovies(data.data.results);\n      });\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies.length > 0 && (\n        <>\n          <ul className={styles.movies_list}>\n            {movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '105389e3cecb1095d9153413896fdc0a';\n\nconst getTrendingMovies = () => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    return axios(`${BASE_URL}/trending/movie/day?${params}`)\n};\n\nconst searchMovie = (query) => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n    });\n    return axios(`${BASE_URL}/search/movie?${params}`)\n};\n\nconst movieDetails = (id) => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    return axios(`${BASE_URL}/movie/${id}?${params}`)\n};\n\nconst movieCredits = (id) => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    return axios(`${BASE_URL}/movie/${id}/credits?${params}`)\n};\n\nconst movieReviews = (id) => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    \n    return axios(`${BASE_URL}/movie/${id}/reviews?${params}`)\n} \n\nexport {getTrendingMovies, searchMovie, movieDetails,movieCredits, movieReviews };","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"movies_searchForm__cDEKV\",\"searchForm_button\":\"movies_searchForm_button__4MMV5\",\"searchForm_button__label\":\"movies_searchForm_button__label__Jp0Em\",\"searchForm_input\":\"movies_searchForm_input__MuOBN\",\"movies_list\":\"movies_movies_list__pFMp4\"};"],"names":["onSubmit","useSearchParams","searchParams","useState","get","searchQuery","setSearchQuery","className","styles","e","preventDefault","alert","type","placeholder","name","value","onChange","target","toLocaleLowerCase","movies","setMovies","setSearchParams","useEffect","query","searchMovie","then","data","total_results","results","length","map","movie","to","id","title","BASE_URL","API_KEY","getTrendingMovies","params","URLSearchParams","api_key","axios","movieDetails","movieCredits","movieReviews"],"sourceRoot":""}